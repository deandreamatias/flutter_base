version: 2.1
orbs:
  android: circleci/android@2
  flutter: circleci/flutter@1.1.0
  slack: circleci/slack@4.1
jobs:
  deploy-android:
    executor:
      name: android/android-machine
      resource-class: large
      tag: 2022.09.1
    steps:
      - checkout
      - install_flutter
      - build
      - flutter/install_android_gem
      - env_vars_files
      - run:
          name: Deploy Android app by fastlane
          command: |
            if [[ "$CIRCLE_BRANCH" == "develop" ]]; then
              bundle exec fastlane build_deploy_internal_beta
            elif [[ "$CIRCLE_BRANCH" == "master" ]]; then
              bundle exec fastlane build_deploy_internal_prod
            else
              echo "Incorrect branch $CIRCLE_BRANCH"
              exit 1
            fi
          working_directory: android
  deploy-ios:
    macos:
      xcode: 14.1.0
    environment:
      FL_OUTPUT_DIR: output
    steps:
      - checkout
      - install_flutter:
          os: "macos"
      - build
      - flutter/install_ios_gem
      - run: fvm flutter precache --ios
      - flutter/install_ios_pod
      - run:
          name: Deploy iOS app by fastlane
          command: |
            if [[ "$CIRCLE_BRANCH" == "develop" ]]; then
              bundle exec fastlane build_deploy_internal_beta
            elif [[ "$CIRCLE_BRANCH" == "master" ]]; then
              bundle exec fastlane build_deploy_internal_prod
            else
              echo "Incorrect branch $CIRCLE_BRANCH"
              exit 1
            fi
          working_directory: ios
      - store_artifacts:
          path: output
  send-notification:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - slack/notify:
          channel: C0478GQDPV2
          event: pass
          template: basic_success_1
      - slack/notify:
          channel: C0478GQDPV2
          event: fail
          template: basic_fail_1

commands:
  build:
    description: Build generated files
    steps:
      - run:
          name: Get dependencies
          command: fvm flutter pub get
      - run:
          name: Generated auto generated files
          command: fvm flutter pub run build_runner build --delete-conflicting-outputs
      - run:
          name: Generated translation files
          command: fvm flutter pub run easy_localization:generate -S assets/translations -f keys -O lib/ui/i18n -o locale_keys.g.dart
  install_flutter:
    description: Install Flutter by FVM
    parameters:
      os:
        type: enum
        default: "linux"
        enum: ["linux", "macos", "windows"]
    steps:
      - run:
          name: Set env vars
          command: |
            echo 'export PATH="$CIRCLE_WORKING_DIRECTORY"/fvm:"$CIRCLE_WORKING_DIRECTORY"/.pub-cache/bin:"$CIRCLE_WORKING_DIRECTORY"/fvm/default/bin:"$PATH"' >> $BASH_ENV
            echo 'export FVM_HOME="$CIRCLE_WORKING_DIRECTORY"/fvm/versions/' >> $BASH_ENV
            echo 'export FVM_VERSION=2.4.1' >> $BASH_ENV
      - run:
          name: Install FVM
          command: |
            curl -O -L https://github.com/fluttertools/fvm/releases/download/"$FVM_VERSION"/fvm-"$FVM_VERSION"-<< parameters.os >>-x64.tar.gz
            tar -xf fvm-"$FVM_VERSION"-<< parameters.os >>-x64.tar.gz
            rm fvm-"$FVM_VERSION"-<< parameters.os >>-x64.tar.gz
      - run:
          name: Install Flutter
          command: fvm install
  env_vars_files:
    description: Get enviroment variables files
    steps:
      - run:
          name: Get google play store api key
          command: echo $GOOGLE_PLAY_API_KEY | base64 -d > ./android/fastlane/api-access.json
      - run:
          name: Get Android sign files
          command: |
            if [[ "$CIRCLE_BRANCH" == "develop" ]]; then
              echo $BETA_PLAY_STORE_UPLOAD_KEY_PROPERTIES | base64 -d > ./android/beta.key.properties
              echo $BETA_PLAY_STORE_UPLOAD_KEY | base64 -d > ./android/upload-keystore-beta.jks
            elif [[ "$CIRCLE_BRANCH" == "master" ]]; then
              echo $LIVE_PLAY_STORE_UPLOAD_KEY_PROPERTIES | base64 -d > ./android/live.key.properties
              echo $LIVE_PLAY_STORE_UPLOAD_KEY | base64 -d > ./android/upload-keystore-live.jks
            else
              echo "Incorrect branch $CIRCLE_BRANCH"
              exit 1
            fi

workflows:
  deploy:
    jobs:
      - deploy-android:
          filters:
            branches:
              only:
                - master
                - develop
      - deploy-ios:
          context:
            - match
          filters:
            branches:
              only:
                - master
                - develop
      - send-notification:
          context:
            - slack
          requires:
            - deploy-android
            - deploy-ios
          filters:
            branches:
              only:
                - master
                - develop
