version: 2.1
orbs:
  android: circleci/android@2.1.2
  flutter: circleci/flutter@1.1.0
jobs:
  deploy-android:
      executor:
        name: android/android-machine
        resource-class: large
        tag: 2021.10.1
      steps:
        - checkout
        - install_flutter
        - build
        - flutter/install_android_gem
        - env_vars_files
        - when:
            condition:
              equal: [ develop, << pipeline.git.branch >> ]
            steps:
              - run:
                  name: Deploy Android app (close testing Beta) by fastlane
                  command: bundle exec fastlane build_deploy_internal_beta
                  working_directory: android
        - when:
            condition:
              equal: [ main, << pipeline.git.branch >> ]
            steps:
              - run:
                  name: Deploy Android app (close testing Beta) by fastlane
                  command: bundle exec fastlane build_deploy_internal_prod
                  working_directory: android
  deploy-ios:
      macos:
        xcode: 14.1.0
      environment:
        FL_OUTPUT_DIR: output
      steps:
        - checkout
        - install_flutter:
            os: "macos"
        - build
        - flutter/install_ios_gem
        - run: fvm flutter precache --ios
        - flutter/install_ios_pod
        - when:
            condition:
              equal: [ develop, << pipeline.git.branch >> ]
            steps:
              - run:
                  name: Deploy iOS app (internal Beta) by fastlane
                  command: bundle exec fastlane build_deploy_internal_beta
                  working_directory: ios
        - when:
            condition:
              equal: [ main, << pipeline.git.branch >> ]
            steps:
              - run:
                  name: Deploy iOS app (internal Prod) by fastlane
                  command: bundle exec fastlane build_deploy_internal_prod
                  working_directory: ios
        - store_artifacts:
            path: output

commands:
  build:
    description: Build generated files
    steps:
      - run: 
          name: Get dependencies
          command: fvm flutter pub get
      - run: 
          name: Generated auto generated files
          command: fvm flutter pub run build_runner build
      - run: 
          name: Generated translation files
          command: | 
            fvm flutter pub run easy_localization:generate -S assets/translations -O lib/ui/i18n
            fvm flutter pub run easy_localization:generate -S assets/translations -f keys -O lib/ui/i18n -o locale_keys.g.dart
  install_flutter:
    description: Install Flutter by FVM
    parameters:
      os:
        type: enum
        default: "linux"
        enum: ["linux", "macos", "windows"]
    steps:
      - run:
          name: Set env vars
          command: |
            echo 'export PATH="$CIRCLE_WORKING_DIRECTORY"/fvm:"$CIRCLE_WORKING_DIRECTORY"/.pub-cache/bin:"$CIRCLE_WORKING_DIRECTORY"/fvm/default/bin:"$PATH"' >> $BASH_ENV
            echo 'export FVM_HOME="$CIRCLE_WORKING_DIRECTORY"/fvm/versions/' >> $BASH_ENV
            echo 'export FVM_VERSION=2.4.1' >> $BASH_ENV
      - run:
          name: Install FVM
          command: |
            curl -O -L https://github.com/fluttertools/fvm/releases/download/"$FVM_VERSION"/fvm-"$FVM_VERSION"-<< parameters.os >>-x64.tar.gz
            tar -xf fvm-"$FVM_VERSION"-<< parameters.os >>-x64.tar.gz
            rm fvm-"$FVM_VERSION"-<< parameters.os >>-x64.tar.gz
      - run:
          name: Install Flutter
          command: fvm install
  env_vars_files:
    description: Get enviroment variables files
    steps:
      - run: 
          name: Get Android files
          command: |
            echo $KEY_PROPERTIES | base64 -d > ./android/key.properties
            echo $UPLOAD_KEYSTORE | base64 -d > ./android/upload-keystore.jks
            echo $PLAY_STORE_UPLOAD_KEY | base64 -d > ./android/fastlane/api-access.json

workflows:
  deploy:
    jobs:
      - deploy-android:
          name: "Distribute Android app (close testing)"
          filters:
            branches:
              only:
                - develop
                - main
      - deploy-ios:
          name: "Distribute iOS app (internal)"
          context:
            - match
          filters:
            branches:
              only:
                - develop
                - main
